{
  "name": "storefront",
  "version": "1.0.0",
  "description": "*\tCreate a MySQL Database called bamazon.\r *\tThen create a Table inside of that database called products.\r *\tThe products table should have each of the following columns:\r \titem_id (unique id for each product)\r \tproduct_name (Name of product)\r \tdepartment_name\r \tprice (cost to customer)\r \tstock_quantity (how much of the product is available in stores)\r *\tPopulate this database with around 10 different products. (i.e. Insert \"mock\" data rows into this database and table).\r *\tThen create a Node application called bamazonCustomer.js. Running this application will first display all of the items available for sale. Include the ids, names, and prices of products for sale.\r *\tThe app should then prompt users with two messages.\r *\tThe first should ask them the ID of the product they would like to buy.\r *\tThe second message should ask how many units of the product they would like to buy.\r *\tOnce the customer has placed the order, your application should check if your store has enough of the product to meet the customer's request.\r *\tIf not, the app should log a phrase like Insufficient quantity!, and then prevent the order from going through.\r *\tHowever, if your store does have enough of the product, you should fulfill the customer's order.\r *\tThis means updating the SQL database to reflect the remaining quantity.\r *\tOnce the update goes through, show the customer the total cost of their purchase.",
  "main": "bamazonCustomer.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/derazmus/MySQL-storefront.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/derazmus/MySQL-storefront/issues"
  },
  "homepage": "https://github.com/derazmus/MySQL-storefront#readme"
}
